import { objectWithoutProperties as _objectWithoutProperties } from '../../../../_virtual/_rollupPluginBabelHelpers.js';
import React$1 from 'react';
import styles from '../../ActionList.scss.js';
import { Item as Item$1 } from '../Item/Item.js';

function Section({
  section,
  hasMultipleSections,
  actionRole,
  onActionAnyItem
}) {
  var handleAction = itemOnAction => {
    return () => {
      if (itemOnAction) {
        itemOnAction();
      }

      if (onActionAnyItem) {
        onActionAnyItem();
      }
    };
  };

  var actionMarkup = section.items.map((_ref, index) => {
    var {
      content,
      helpText,
      onAction
    } = _ref,
        item = _objectWithoutProperties(_ref, ["content", "helpText", "onAction"]);

    return /*#__PURE__*/React$1.createElement(Item$1, Object.assign({
      key: "".concat(content, "-").concat(index),
      content: content,
      helpText: helpText,
      role: actionRole,
      onAction: handleAction(onAction)
    }, item));
  });
  var className = section.title ? undefined : styles['Section-withoutTitle'];
  var titleMarkup = section.title ? /*#__PURE__*/React$1.createElement("p", {
    className: styles.Title
  }, section.title) : null;
  var sectionRole = actionRole === 'option' ? 'presentation' : undefined;
  var sectionMarkup = /*#__PURE__*/React$1.createElement("div", {
    className: className
  }, titleMarkup, /*#__PURE__*/React$1.createElement("ul", {
    className: styles.Actions,
    role: sectionRole
  }, actionMarkup));
  return hasMultipleSections ? /*#__PURE__*/React$1.createElement("li", {
    className: styles.Section
  }, sectionMarkup) : sectionMarkup;
}

export { Section };
