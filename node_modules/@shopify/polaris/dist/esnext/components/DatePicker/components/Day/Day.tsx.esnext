import React$1, { memo, useRef, useEffect } from 'react';
import { useI18n } from '../../../../utilities/i18n/hooks.tsx.esnext';
import { classNames } from '../../../../utilities/css.ts.esnext';
import { isSameDay } from '../../../../utilities/dates.ts.esnext';
import { monthName } from '../../utilities.tsx.esnext';
import styles from '../../DatePicker.scss.esnext';

const Day = /*#__PURE__*/memo(function Day({
  day,
  focused,
  onClick,
  onHover = noop,
  onFocus = noop,
  selected,
  inRange,
  inHoveringRange,
  disabled,
  lastDayOfMonth,
  isLastSelectedDay,
  isFirstSelectedDay,
  isHoveringRight,
  rangeIsDifferent
}) {
  const i18n = useI18n();
  const dayNode = useRef(null);
  const hoverValue = lastDayOfMonth || day;
  useEffect(() => {
    if (focused && dayNode.current) {
      dayNode.current.focus();
    }
  }, [focused]);

  if (!day) {
    return /*#__PURE__*/React$1.createElement("div", {
      className: styles.EmptyDay,
      onMouseOver: () => onHover(hoverValue)
    });
  }

  const handleClick = onClick && !disabled ? onClick.bind(null, day) : noop;
  const today = isSameDay(new Date(), day);
  const className = classNames(styles.Day, selected && styles['Day-selected'], disabled && styles['Day-disabled'], today && styles['Day-today'], (inRange || inHoveringRange) && !disabled && styles['Day-inRange'], isLastSelectedDay && styles['Day-lastInRange'], isFirstSelectedDay && styles['Day-firstInRange'], isHoveringRight && styles['Day-hoverRight'], rangeIsDifferent && styles['Day-hasRange']);
  const date = day.getDate();
  const tabIndex = (focused || selected || today || date === 1) && !disabled ? 0 : -1;
  const ariaLabel = [`${today ? i18n.translate('Polaris.DatePicker.today') : ''}`, `${i18n.translate(`Polaris.DatePicker.months.${monthName(day.getMonth())}`)} `, `${date} `, `${day.getFullYear()}`].join('');
  return /*#__PURE__*/React$1.createElement("button", {
    onFocus: () => onFocus(day),
    type: "button",
    ref: dayNode,
    tabIndex: tabIndex,
    className: className,
    onMouseOver: () => onHover(hoverValue),
    onClick: handleClick,
    "aria-label": ariaLabel,
    "aria-selected": selected,
    "aria-disabled": disabled,
    role: "gridcell"
  }, date);
});

function noop() {}

export { Day };
