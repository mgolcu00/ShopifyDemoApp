import React$1, { useCallback } from 'react';
import { useFeatures } from '../../../../utilities/features/hooks.tsx.esnext';
import { Popover as Popover$1 } from '../../../Popover/Popover.tsx.esnext';
import { ActionList as ActionList$1 } from '../../../ActionList/ActionList.tsx.esnext';
import { Button as Button$1 } from '../../../Button/Button.tsx.esnext';
import { MenuAction as MenuAction$1 } from '../MenuAction/MenuAction.tsx.esnext';
import styles from './MenuGroup.scss.esnext';

function MenuGroup({
  accessibilityLabel,
  active,
  actions,
  details,
  title,
  icon,
  onClose,
  onOpen
}) {
  const {
    newDesignLanguage
  } = useFeatures();
  const handleClose = useCallback(() => {
    onClose(title);
  }, [onClose, title]);
  const handleOpen = useCallback(() => {
    onOpen(title);
  }, [onOpen, title]);

  if (!actions.length) {
    return null;
  }

  const popoverActivator = newDesignLanguage ? /*#__PURE__*/React$1.createElement(Button$1, {
    disclosure: true,
    icon: icon,
    accessibilityLabel: accessibilityLabel,
    onClick: handleOpen
  }, title) : /*#__PURE__*/React$1.createElement(MenuAction$1, {
    disclosure: true,
    content: title,
    icon: icon,
    accessibilityLabel: accessibilityLabel,
    onAction: handleOpen
  });
  return /*#__PURE__*/React$1.createElement(Popover$1, {
    active: Boolean(active),
    activator: popoverActivator,
    preferredAlignment: "left",
    onClose: handleClose
  }, /*#__PURE__*/React$1.createElement(ActionList$1, {
    items: actions,
    onActionAnyItem: handleClose
  }), details && /*#__PURE__*/React$1.createElement("div", {
    className: styles.Details
  }, details));
}

export { MenuGroup };
