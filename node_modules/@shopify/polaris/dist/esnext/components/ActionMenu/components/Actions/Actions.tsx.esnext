import React$1, { useState, useCallback } from 'react';
import { useFeatures } from '../../../../utilities/features/hooks.tsx.esnext';
import { Button as Button$1 } from '../../../Button/Button.tsx.esnext';
import { ButtonGroup as ButtonGroup$1 } from '../../../ButtonGroup/ButtonGroup.tsx.esnext';
import { sortAndOverrideActionOrder } from '../../utilities.ts.esnext';
import { MenuAction as MenuAction$1 } from '../MenuAction/MenuAction.tsx.esnext';
import { MenuGroup as MenuGroup$1 } from '../MenuGroup/MenuGroup.tsx.esnext';
import styles from './Actions.scss.esnext';

function Actions({
  actions = [],
  groups = []
}) {
  const {
    newDesignLanguage
  } = useFeatures();
  const [activeMenuGroup, setActiveMenuGroup] = useState(undefined);
  const handleMenuGroupToggle = useCallback(group => setActiveMenuGroup(activeMenuGroup ? undefined : group), [activeMenuGroup]);
  const handleMenuGroupClose = useCallback(() => setActiveMenuGroup(undefined), []);
  const menuActions = [...actions, ...groups];
  const overriddenActions = sortAndOverrideActionOrder(menuActions);
  const actionMarkup = overriddenActions.map((action, index) => {
    if ('title' in action) {
      const {
        title,
        actions,
        ...rest
      } = action;
      return actions.length > 0 ? /*#__PURE__*/React$1.createElement(MenuGroup$1, Object.assign({
        key: `MenuGroup-${index}`,
        title: title,
        active: title === activeMenuGroup,
        actions: actions
      }, rest, {
        onOpen: handleMenuGroupToggle,
        onClose: handleMenuGroupClose
      })) : null;
    }

    const {
      content,
      onAction,
      ...rest
    } = action;
    return newDesignLanguage ? /*#__PURE__*/React$1.createElement(Button$1, Object.assign({
      key: index,
      onClick: onAction
    }, rest), content) : /*#__PURE__*/React$1.createElement(MenuAction$1, Object.assign({
      key: `MenuAction-${index}`,
      content: content,
      onAction: onAction
    }, rest));
  });
  return /*#__PURE__*/React$1.createElement("div", {
    className: styles.ActionsLayout
  }, newDesignLanguage ? /*#__PURE__*/React$1.createElement(ButtonGroup$1, null, actionMarkup) : actionMarkup);
}

export { Actions };
